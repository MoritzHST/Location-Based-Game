image: "node:latest"

cache:
  paths:
  - node_modules/

stages:
  - build
  - test
  - analysis
  - deploy

build:
  stage: build
  script:
    - "npm install"

test_mocha:
  stage: test
  script:
    - "npm install mocha"
    - "npm test"

sonarqube:
  stage: analysis
  image: ciricihq/gitlab-sonar-scanner
  variables:
    SONAR_URL: "https://cdelivery.fh-stralsund.de"
    SONAR_ANALYSIS_MODE: issues
  script:
  - gitlab-sonar-scanner -X

sonarqube-reports:
  stage: analysis
  image: ciricihq/gitlab-sonar-scanner
  variables:
    SONAR_URL: "https://cdelivery.fh-stralsund.de"
    SONAR_ANALYSIS_MODE: publish
  script:
  - gitlab-sonar-scanner -X

deploy_production:
  stage: deploy
  only: 
    - "master"
  services:
    - docker:dind
  before_script:
    - apt-get update -y && apt-get install sshpass
  script:
    - sshpass -p "${DEPLOYMENT_SERVER_PASS}" scp -o StrictHostKeyChecking=no -o PreferredAuthentications=password -o PubkeyAuthentication=no ./environment.env ${DEPLOYMENT_SERVER_USER}@${DEPLOYMENT_SERVER_IP}:${DEPLOYMENT_SERVER_PORT}/
    - sshpass -p "${DEPLOYMENT_SERVER_PASS}" scp -o StrictHostKeyChecking=no -o PreferredAuthentications=password -o PubkeyAuthentication=no ./docker-compose.autodeploy.yml ${DEPLOYMENT_SERVER_USER}@${DEPLOYMENT_SERVER_IP}:${DEPLOYMENT_SERVER_PORT}/
    - sshpass -p $DEPLOYMENT_SERVER_PASS ssh -o StrictHostKeyChecking=no -o PreferredAuthentications=password -o PubkeyAuthentication=no $DEPLOYMENT_SERVER_USER@$DEPLOYMENT_SERVER_IP "echo ${$DEPLOYMENT_SERVER_PASS} | sudo -S ls && docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}; sudo docker-compose -f docker-compose.autodeploy.yml stop; sudo docker-compose -f docker-compose.autodeploy.yml rm web --force; sudo docker pull ${CI_REGISTRY}/${CI_PROJECT_PATH}:latest; sudo docker-compose -f docker-compose.autodeploy.yml up -d"